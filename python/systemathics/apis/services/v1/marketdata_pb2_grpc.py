# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from systemathics.apis.services.v1 import marketdata_pb2 as systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2


class MarketDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MarketData1 = channel.unary_stream(
                '/systemathics.apis.services.v1.MarketDataService/MarketData1',
                request_serializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketData1Request.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketData1Response.FromString,
                )
        self.MarketDataN = channel.unary_stream(
                '/systemathics.apis.services.v1.MarketDataService/MarketDataN',
                request_serializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketDataNRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketDataNResponse.FromString,
                )


class MarketDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MarketData1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarketDataN(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MarketData1': grpc.unary_stream_rpc_method_handler(
                    servicer.MarketData1,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketData1Request.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketData1Response.SerializeToString,
            ),
            'MarketDataN': grpc.unary_stream_rpc_method_handler(
                    servicer.MarketDataN,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketDataNRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketDataNResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'systemathics.apis.services.v1.MarketDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MarketData1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.v1.MarketDataService/MarketData1',
            systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketData1Request.SerializeToString,
            systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketData1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarketDataN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.v1.MarketDataService/MarketDataN',
            systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketDataNRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_v1_dot_marketdata__pb2.MarketDataNResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
