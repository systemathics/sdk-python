// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Represents the times and sales market data.
syntax = "proto3";


import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "systemathics/apis/type/shared/v1/action.proto";
import "systemathics/apis/type/shared/v1/field.proto";

package systemathics.apis.type.shared.v1;

// Represents market field updates.
message MarketFieldsUpdates
{
	// The instrument mapping key: short code for instrument identifier.
	uint32 mapping = 1;

	// Timestamp from the market
	google.protobuf.Timestamp time_stamp = 2;

	// If set, previous data must be cleared entirely, otherwise current data is an increment on top of previous data
	bool reset = 3;
    
    // The market book updates: an array of MarketFieldUpdate objects
    repeated MarketFieldUpdate updates = 4;
}

// Represents a market field update
message MarketFieldUpdate
{
    // Action on market field update
    systemathics.apis.type.shared.v1.Action action = 1;
    
    // Field of market field update
    Field field = 2;
    
    // Value of the market field update
    oneof value 
    {
        // long value (depends of the field)
        int64 long_value = 3;
        
        // double value (depends of the field)
        double double_value = 4;
        
        // string value (depends of the field)
        string string_value = 5;
    }
}
