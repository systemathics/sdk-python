// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Represents a date and time constraint:
// <br>- Time zone is alway implied to be Universal Time Coordinated (UTC)
// <br>- Dates are relative to the Proleptic Gregorian Calendar. 
syntax = "proto3";


import "google/type/date.proto";
import "google/type/dayofweek.proto";

import "systemathics/apis/type/shared/v1/date_interval.proto";
import "systemathics/apis/type/shared/v1/time_interval.proto";

package systemathics.apis.type.shared.v1;

// <br>- Zero, one or many [Date intervals](#DateInterval). The union of each date interval is used.
// <br>- Zero, one or many [Time intervals](#TimeInterval). The union of each time interval is used.
// <br>- Zero, one or many [Excluded dates](#google.type.Date). The union of each excluded dates is used.
// <br>- Zero, one or many [Excluded days](#google.type.DayOfWeek). The union of each excluded days is used.
message Constraints 
{
    // Restricts request to an union of date_intervals
    // <br>Providing no date_intervals will return all the stored data
    repeated DateInterval date_intervals = 1;
    // Restricts request to an union of time_intervals. (ie: Market hours, trading hours, ...)
    // <br>Note: Time intervals including midnight needs to be described as an union of time intervals (ie : [22:00-23:59] U [00:00-04:00])
    repeated TimeInterval time_intervals = 2;
    // Restricts request to an union of excluded_dates (ie: closed Days, holidays, ...).
    repeated google.type.Date excluded_dates = 3;
    // Restricts request to an union of excluded_days (ie: weekd-end can be represented with Saturday, Sunday)
    repeated google.type.DayOfWeek excluded_days = 4;
}
