// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Instrument identifier is built from:
// <br>- An exchange code: MIC
// <br>- A ticker: instrument name given by the exchange
// <br>- An optional provider name if several tick data providers are available
syntax = "proto3";

import "google/protobuf/wrappers.proto";

import "systemathics/apis/type/shared/v1/level.proto";

package systemathics.apis.type.shared.v1;

// Contains the instrument identifier and stream.
message IdentifierAndLevel
{
	// [Mandatory] Exchange market identifier code (MIC defined in ISO-20022).
	string exchange = 1;
	
	// [Mandatory] Ticker name, associated with market idenfier code defines a unique asset.
	string ticker = 2;	
	
	// [Optional] tick data provider name if several tick data providers are available.
	google.protobuf.StringValue provider = 3;

	// [Mandatory] The data level.
	systemathics.apis.type.shared.v1.Level level = 4;	
}
