// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Represents market data field types for time and sales. This excludes book updates, to learn more about market book updates please refer to <a href="#systemathics/apis/type/v1/market_book_updates.proto">the dedicated section</a>.
syntax = "proto3";


package systemathics.apis.type.shared.v1;

// Contains the field tyoes for <a href="#systemathics/apis/type/v1/market_fields_updates.proto">a market field update</a>.
enum Field
{
    // The unspecfied field
    FIELD_UNSPECIFIED = 0;
    // The open price (associated value type is double)
    FIELD_OPEN_PRICE = 1;
    // The open size (associated value type is long)
    FIELD_OPEN_SIZE = 2;
    // The close price (associated value type is double)
    FIELD_CLOSE_PRICE = 3;
    // The close size (associated value type is long)
    FIELD_CLOSE_SIZE = 4;
    // The low price (associated value type is double)
    FIELD_LOW_PRICE = 5;
    // The low size (associated value type is long)
    FIELD_LOW_SIZE = 6;
    // The high price (associated value type is double)
    FIELD_HIGH_PRICE = 7;
    // The high size (associated value type is long)
    FIELD_HIGH_SIZE = 8;
    // The last trade price (associated value type is double)
    FIELD_TRADE_PRICE = 9;
    // The last trade size (associated value type is long)
    FIELD_TRADE_SIZE = 10;
    // The trading condition (associated value type is string)
    FIELD_TRADING_CONDITION = 11;
    // The trade count (associated value type is long)
    FIELD_TRADE_COUNT = 12;
    // The last otc trade price (associated value type is double)
    FIELD_TRADE_OTC_PRICE = 13;
    // The last otc trade size (associated value type is long)
    FIELD_TRADE_OTC_SIZE = 14;
    // The otc trade count (associated value type is long)
    FIELD_TRADE_OTC_COUNT = 15;
    // The daily volume (associated value type is long)
    FIELD_VOLUME = 16;
    // The official vwap (associated value type is double)
    FIELD_VWAP_OFFICIAL = 17;
    // The electronic vwap (associated value type is double)
    FIELD_VWAP_ELECTRONIC = 18;
    // The theoretical price (associated value type is double)
    FIELD_THEORETICAL_PRICE = 19;
    // The theoretical size (associated value type is long)
    FIELD_THEORETICAL_SIZE = 20;
    // The upper price (associated value type is double)
    FIELD_UPPER_PRICE = 21;
    // The lower price (associated value type is double)
    FIELD_LOWER_PRICE = 22;
    // The variation (associated value type is double)
    FIELD_VARIATION = 23;
    // The percentage variation (associated value type is double)
    FIELD_VARIATION_PERCENTAGE = 24;
    // The trade id (associated value type is string)
    FIELD_TRADE_ID = 25;
}
