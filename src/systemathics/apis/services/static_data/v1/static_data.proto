// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Reference data encompasses a wide range of specification data about:
// <br>- financial instrument such as asset class, symbol, maturity, etc.
// <br>- counterparties such as issuer information.
// <br>- pricing such as open, high low and close prices.
// <br>- The challenge with reference data is that it tends to be sourced from multiple sources: internal, counterparties and providers.
// <br>- Reference data dedicated service is a result of various data sources and fields sourcing, validation, cross-checking and normalization.
syntax = "proto3";


import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "google/type/date.proto";

import "systemathics/apis/type/shared/v1/identifier.proto";

package systemathics.apis.services.static_data.v1;

// Called to request reference data.
service StaticDataService
{
  // Gets reference data
  rpc StaticData(StaticDataRequest) returns (StaticDataResponse)
  {
	  	option (google.api.http) = {
			get: "/v1/staticdata"
		};
  }
}

// The required input to request the StaticDataService.
message StaticDataRequest
{
	// [Optional] Asset Type
	AssetType asset_type = 1;

	// [Optional] Address
	google.protobuf.StringValue address = 2;

	// [Optional] Bloomberg
	google.protobuf.StringValue bloomberg = 3;

	// [Optional] BondType
	google.protobuf.StringValue bondtype = 4;

	// [Optional] Capitalization
	google.protobuf.StringValue capitalization = 5;

	// [Optional] Category
	google.protobuf.StringValue category = 6;

	// [Optional] Chain
	google.protobuf.StringValue chain = 7;

	// [Optional] Cik
	google.protobuf.StringValue cik = 8;

	// [Optional] Circulating Supply
	google.protobuf.StringValue circulating_supply = 9;

	// [Optional] Classification
	google.protobuf.StringValue classification = 10;

	// [Optional] Components
	google.protobuf.StringValue components = 11;

	// [Optional] Consensus
	google.protobuf.StringValue consensus = 12;

	// [Optional] Contract
	google.protobuf.StringValue contract = 13;

	// [Optional] Component Count
	google.protobuf.StringValue components_count = 14;

	// [Optional] Coupon Rate
	google.protobuf.StringValue coupon_rate = 15;

	// [Optional] Coupon Type
	google.protobuf.StringValue coupon_type = 16;

	// [Optional] Base Currency
	google.protobuf.StringValue base_currency = 17;

	// [Optional] Quote Currency
	google.protobuf.StringValue quote_currency = 18;

	// [Optional] Cusip
	google.protobuf.StringValue cusip = 19;

	// [Optional] Description
	google.protobuf.StringValue description = 20;

	// [Optional] Email
	google.protobuf.StringValue email = 21;

	// [Optional] Exchange
	google.protobuf.StringValue exchange = 22;

	// [Optional] Exercise
	google.protobuf.StringValue exercise = 23;

	// [Optional] Expiry
	google.protobuf.StringValue expiry = 24;

	// [Optional] Figi
	google.protobuf.StringValue figi = 25;

	// [Optional] Figic
	google.protobuf.StringValue figic = 26;

	// [Optional] Frequency
	google.protobuf.StringValue frequency = 27;

	// [Optional] Fund Type
	google.protobuf.StringValue fund_type = 28;

	// [Optional] Holders
	google.protobuf.StringValue holders = 29;

	// [Optional] Index
	google.protobuf.StringValue index = 30;

	// [Optional] Isin
	google.protobuf.StringValue isin = 31;

	// [Optional] Issue Date
	google.protobuf.StringValue issue_date = 32;

	// [Optional] Issuer
	google.protobuf.StringValue issuer = 33;

	// [Optional] Markit
	google.protobuf.StringValue markit = 34;

	// [Optional] Maturity
	google.protobuf.StringValue maturity = 35;

	// [Optional] Max Supply
	google.protobuf.StringValue max_supply = 36;

	// [Optional] Methodology
	google.protobuf.StringValue methodology = 37;

	// [Optional] Month
	google.protobuf.StringValue month = 38;

	// [Optional] Morningstar
	google.protobuf.StringValue morningstar = 39;

	// [Optional] Name
	google.protobuf.StringValue name = 40;

	// [Optional] Operating
	google.protobuf.StringValue operating = 41;

	// [Optional] Option Type
	google.protobuf.StringValue option_type = 42;

	// [Optional] Phone
	google.protobuf.StringValue phone = 43;

	// [Optional] Primary
	google.protobuf.StringValue primary = 44;

	// [Optional] Recovery
	google.protobuf.StringValue recovery = 45;

	// [Optional] Reuters
	google.protobuf.StringValue reuters = 46;

	// [Optional] Sector
	google.protobuf.StringValue sector = 47;

	// [Optional] Sedol
	google.protobuf.StringValue sedol = 48;

	// [Optional] Strike
	google.protobuf.StringValue strike = 49;

	// [Optional] Tenor
	google.protobuf.StringValue tenor = 50;

	// [Optional] Ticker
	google.protobuf.StringValue ticker = 51;

	// [Optional] Total Supply
	google.protobuf.StringValue total_supply = 52;

	// [Optional] Underlying
	google.protobuf.StringValue underlying = 53;

	// [Optional] Url
	google.protobuf.StringValue url = 54;

	// [Optional] Year
	google.protobuf.StringValue year = 55;

    // [Optional] Define the first element index to be retrieved
    google.protobuf.Int32Value start = 56;

    // [Optional] Select the first elements retrieved, by default count is set to 100
    google.protobuf.Int32Value count = 57;
}

// Represents a reference data response grouped by asset type.
message StaticDataResponse
{
	// The reference data for futures: the futures array
	repeated FutureEntry futures  = 1;

	// The reference data for equities: the equities array
	repeated EquityEntry equities  = 2;

	// The reference data for etfs: the etfs array
	repeated EtfEntry etfs  = 3;

	// The reference data for indices: the indices array
	repeated IndexEntry indices  = 4;

	// The reference data for crypto currencies: the cryptos array
	repeated CryptoEntry cryptos  = 5;

	// The reference data for forex pairs: the forex array
	repeated ForexEntry forex  = 6;

	// The reference data for options: the options array
	repeated OptionEntry options  = 7;

	// The reference data for bonds: the bonds array
	repeated BondEntry bonds  = 8;

	// The reference data for cds: the credit default swaps array
	repeated CdsEntry cds  = 9;
}

// Contains the reference data for equities.
message EquityEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;
	
	// Specific values for the equity: cik (Central Index Key number). The Cik is used as a unique identifier for financial filings with the Security and Exchange Commision of the USA
	string cik = 32;
    // Specific values for the equity: sectors definitions
	map<string, string> sectors = 33;
    // Specific values for the equity: market capitalization
    google.protobuf.DoubleValue capitalization = 34;
	// Specific values for the equity: the main address of the company
	string address = 35;
	// Specific values for the equity: the main phone of the company
	string phone = 36;
	// Specific values for the equity: the main email of the company
	string email = 37;
	// Specific values for the equity: the website link of the company
	string url = 38;
	// Specific values for the equity: the CFI (Classification of Financial Instruments) code
	string classification = 39;
	// Specific values for the equity: the main shareholders of the company
	map<string, double> holders = 40;
}

// Contains the reference data for exchange traded fund (ETF).
message EtfEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the etf: cik (Central Index Key number). The Cik is used as a unique identifier for financial filings with the Security and Exchange Commision of the USA
	string cik = 32;
    // Specific values for the etf: sectors definitions
	map<string, string> sectors = 33;
    // Specific values for the etf: market capitalization
    google.protobuf.DoubleValue capitalization = 34;
	// Specific values for the etf: the main address of the exchange traded fund
	string address = 35;
	// Specific values for the etf: the main phone of the exchange traded fund
	string phone = 36;
	// Specific values for the etf: the main email of the exchange traded fund
	string email = 37;
	// Specific values for the etf: the website link of the exchange traded fund
	string url = 38;
	// Specific values for the etf: the exchange traded fund issuer
	string issuer = 39;
	// Specific values for the etf: the exchange traded fund type
	string fund_type = 40;
	// Specific values for the etf: the exchange traded fund issue date
	google.type.Date issue_date = 41;
}

// Contains the reference data for futures.
message FutureEntry
{	
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the future: the future underlying asset code
	string underlying = 32;
	// Specific values for the future: the future contract code
	string contract = 33;
	// Specific values for the future: the future category
	map<string, string> category = 34;
	// Specific values for the future: the future chain codes
	string chain = 35;
	// Specific values for the future: the future maturity date
	google.type.Date maturity = 36;
	// Specific values for the future: the future month code
	string month = 37;
	// Specific values for the future: the future year
	int32 year = 38;
}

// Contains the reference data for indices.
message IndexEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the index: the index category
	string category = 32;
	// Specific values for the index: the index weighting methodology
	string methodology = 33;
	// Specific values for the index: the index issuer
	string issuer = 34;
	// Specific values for the index: the index issue date
	google.type.Date issue_date = 35;
	// Specific values for the index: the index rebalancing frequency
	FrequencyType frequency = 36;
	// Specific values for the index: the index components (equal weight)
	map<string, double> components = 37;
	// Specific values for the index: the index components number
	int64 count = 38;
}

// Contains the reference data for crypto currencies.
message CryptoEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string base_currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the crypto: the quote currency code
	string quote_currency = 32;
	// Specific values for the crypto: the consensus mechanisms array (POW, POS, DPOS)
	repeated string consensus = 33;
	// Specific values for the crypto: the issue date of the crypto
	google.type.Date issue_date = 34;
	// Specific values for the crypto: the market capitalization
	google.protobuf.DoubleValue capitalization = 35;
		// Specific values for the crypto: the number of coins that are circulating in the market and in the general public's hands
	int32 circulating_supply = 36;
	// Specific values for the crypto: the maximum amount of coins that will ever exist in the lifetime of the cryptocurrency
	int32 max_supply = 37;
	// Specific values for the crypto: the total amount of coins in existence right now (minus any coins that have been verifiably burned)
	int32 total_supply = 38;
}

// Contains the reference data for Forex pairs.
message ForexEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string base_currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the Forex: the quote currency code
	string quote_currency = 32;
}

// Contains the reference data for options.
message OptionEntry
{	
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the option: the option underlying asset code
	string underlying = 32;
	// Specific values for the option: the option strike. The exercise price, which is the price at which the underlying transaction will occur upon exercise.
	double strike = 33;
	// Specific values for the option: the option expiry date. The expiration date, or expiry, which is the last date the option can be exercised.
	google.type.Date expiry = 34;
	// Specific values for the option: the option type: Call or Put.
	OptionType option_type = 35;
	// Specific values for the option: the option exercise type. Determines when, how, and under what circumstances, the option holder may exercise it.
	ExerciseType exercise = 36;
}

// Contains the reference data for bonds.
message BondEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the bond: the issuer
	string issuer = 32;
	// Specific values for the bond: the bond maturity date
	google.type.Date maturity = 33;
	// Specific values for the bond: the bond's type
	BondType bond_type = 34;
	// Specific values for the bond: the bond's frequency. Number of times per year interest is paid
	FrequencyType frequency = 35;
	// Specific values for the bond: the bond's coupon type. Type of interest to be paid to the investors
	CouponType coupon_type = 36;
	// Specific values for the bond: the bond's coupon rate. Current interest rate of the bond
	double coupon_rate = 37;
}

// Contains the reference data for Credit default swap (CDS).
message CdsEntry
{
	// Identifiers: asset identifier
	systemathics.apis.type.shared.v1.Identifier identifier = 1;
	// General information: the asset class
	string type = 2;
	// General information: status indicating whether the asset is active
	bool active = 3;
	// General information: the primary exchange code (mic)
	string primary = 4;
	// General information: the operating exchange code (mic)
	string operating = 5;
	// General information: the full name 
	string name = 6;
	// General information: the currency code (ISO 4217)
	string currency = 7;
	// General information: the country code (ISO 3166)
	string country = 8;
	// General information: the tick size rule table
	repeated TickSize tick_size_rule = 9;
	// General information: the major index array
	repeated string index = 10;
	// General information: the calendar identifier
	string calendar = 11;
	// General information: the description of the asset
	string description = 12;

	// Trading hours: the open time (continuous trading)
	google.protobuf.Duration open = 13;
	// Trading hours: the close time (continuous trading)
	google.protobuf.Duration close = 14;
	// Trading hours: the time zone
	string time_zone = 15;

	// Specifications: the lot size (minimum quantity to trade)
	int64 lot_size = 16;
	// Specifications: the point value
	double point_value = 17;

	// Reference data : the average price
	google.protobuf.DoubleValue price = 18;
	// Reference data : the average daily volume 
	google.protobuf.Int64Value volume = 19;
	// Reference data : the time stamp of the refernce data
	google.type.Date time = 20;

	// Mapping : the count of sources used to cross validate and complete the asset's information
	int32 sources = 21;
	// Mapping: the mapping codes
	map<string, string> mapping = 22;
	// Mapping: the bloomberg code
	string bloomberg = 23;
	// Mapping: the reuters code
	string reuters = 24;
	// Mapping: the morningstar code
	string morningstar = 25;
	// Mapping: the markit (red code) code
	string markit = 26;
	// Mapping: the figi code (Financial Instrument Global Identifier, formerly Bloomberg Global Identifier)
	string figi = 27;
	// Mapping: the figic code (Financial Instrument Global Identifier Composite, formerly Bloomberg Global Identifier)
	string figic = 28;
	// Mapping: isin code (International Securities Identifying Number)
    string isin = 29;
	// Mapping: cusip code : Committee on Uniform Security Identification Procedures
	string cusip = 30;
	// Mapping: sedol code : Stock Exchange Daily Official List
	string sedol = 31;

	// Specific values for the cds: the cds underlying asset code
	string underlying = 32;
	// Specific values for the cds: the cds maturity date
	google.type.Date maturity = 33;
	// Specific values for the cds: the cds's frequency.
	FrequencyType frequency = 34;
	// Specific values for the cds: the tenor
	string tenor = 35;
	// Specific values for the cds: the recovery.
	double recovery = 36;
}


// Contains the tick size rule item : price and tick.
message TickSize
{
	// The price level
	double price = 1;
	// The tick size
	double tick = 2;
}

// Contains the asset type for the reference data request.
enum AssetType
{
	// Not specified ?
	ASSET_TYPE_UNSPECIFIED = 0;
	
	// Search on all asset types
    ASSET_TYPE_ALL = 1;
	
    // Search only on equities
    ASSET_TYPE_EQUITY = 2;

	// Search only on futures
	ASSET_TYPE_FUTURE = 3;

	// Search only on Exchange Traded Fund
	ASSET_TYPE_ETF = 4;

	// Search only on Index
	ASSET_TYPE_INDEX = 5;

	// Search only on Crypto currencies
	ASSET_TYPE_CRYPTO = 6;

	// Search only on Forex pairs
	ASSET_TYPE_FOREX = 7;

	// Search only on options
	ASSET_TYPE_OPTION = 8;

	// Search only on bonds
	ASSET_TYPE_BOND = 9;

	// Search only on cds
	ASSET_TYPE_CDS = 10;
}

// Contains the frequency types.
enum FrequencyType
{
	// Not specified ?
	FREQUENCY_TYPE_UNSPECIFIED = 0;
	
	// None
    FREQUENCY_TYPE_NONE = 1;
	
   	// Daily
    FREQUENCY_TYPE_DAY = 2;

	// Weekly
    FREQUENCY_TYPE_WEEK = 3;

	// Monthly
    FREQUENCY_TYPE_MONTH = 4;

	// Quarterly
    FREQUENCY_TYPE_QUARTER = 5;

	// Semi-Annually
    FREQUENCY_TYPE_SEMIANNUAL = 6;

	// Annually
    FREQUENCY_TYPE_ANNUAL = 7;
	
	// Bi-Annually
    FREQUENCY_TYPE_BIANNUAL = 8;
}

// Contains the option types : call or put.
enum OptionType
{
	// Not specified ?
	OPTION_TYPE_UNSPECIFIED = 0;
	
	// Call
    OPTION_TYPE_CALL = 1;
	
   	// Put
    OPTION_TYPE_PUT = 2;
}

// Contains the option exercise types : Determines when, how, and under what circumstances, the option holder may exercise it.
enum ExerciseType
{
	// Not specified ?
	EXERCISE_TYPE_UNSPECIFIED = 0;
	
	// The American-style option contracts can be exercised at any time up to the option's expiration.
    EXERCISE_TYPE_AMERICAN = 1;
	
   	// The European-style option contracts may only be exercised at the option's expiration date.
    EXERCISE_TYPE_EUROPEAN = 2;

	// The Bermudan-style options contracts may only be exercised on specified dates.
    EXERCISE_TYPE_BERMUDEAN = 3;
}

// Contains the bond types.
enum BondType
{
	// Not specified ?
	BOND_TYPE_UNSPECIFIED = 0;
	
	// The government.
    BOND_TYPE_GOVERNMENT = 1;
	
   	// The corporate.
    BOND_TYPE_CORPORATE = 2;

	// The other.
    BOND_TYPE_OTHER = 3;
}

// Contains the bond's coupon types.
enum CouponType
{
	// Not specified ?
	COUPON_TYPE_UNSPECIFIED = 0;
	
	// The none.
    COUPON_TYPE_NONE = 1;
	
   	// The fixed.
    COUPON_TYPE_FIXED = 2;

	// The floating.
    COUPON_TYPE_FLOATING = 3;
}
