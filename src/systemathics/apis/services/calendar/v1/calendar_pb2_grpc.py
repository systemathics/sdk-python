# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from systemathics.apis.services.calendar.v1 import calendar_pb2 as systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2


class CalendarServiceStub(object):
    """Called to request screener data.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HolidayCurrencies = channel.unary_unary(
                '/systemathics.apis.services.calendar.v1.CalendarService/HolidayCurrencies',
                request_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCurrenciesRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCurrenciesResponse.FromString,
                )
        self.HolidayCenter = channel.unary_unary(
                '/systemathics.apis.services.calendar.v1.CalendarService/HolidayCenter',
                request_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCenterRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCenterResponse.FromString,
                )
        self.Holidays = channel.unary_unary(
                '/systemathics.apis.services.calendar.v1.CalendarService/Holidays',
                request_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidaysRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidaysResponse.FromString,
                )
        self.TradingHoursMic = channel.unary_unary(
                '/systemathics.apis.services.calendar.v1.CalendarService/TradingHoursMic',
                request_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursMicRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursMicResponse.FromString,
                )
        self.TradingHours = channel.unary_unary(
                '/systemathics.apis.services.calendar.v1.CalendarService/TradingHours',
                request_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursResponse.FromString,
                )


class CalendarServiceServicer(object):
    """Called to request screener data.
    """

    def HolidayCurrencies(self, request, context):
        """Gets currencies with holidays information 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HolidayCenter(self, request, context):
        """Gets currencies with holidays information 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Holidays(self, request, context):
        """Gets currencies with holidays information 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TradingHoursMic(self, request, context):
        """Gets mic code with trading hours information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TradingHours(self, request, context):
        """Gets mic code with trading hours information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalendarServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HolidayCurrencies': grpc.unary_unary_rpc_method_handler(
                    servicer.HolidayCurrencies,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCurrenciesRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCurrenciesResponse.SerializeToString,
            ),
            'HolidayCenter': grpc.unary_unary_rpc_method_handler(
                    servicer.HolidayCenter,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCenterRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCenterResponse.SerializeToString,
            ),
            'Holidays': grpc.unary_unary_rpc_method_handler(
                    servicer.Holidays,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidaysRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidaysResponse.SerializeToString,
            ),
            'TradingHoursMic': grpc.unary_unary_rpc_method_handler(
                    servicer.TradingHoursMic,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursMicRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursMicResponse.SerializeToString,
            ),
            'TradingHours': grpc.unary_unary_rpc_method_handler(
                    servicer.TradingHours,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'systemathics.apis.services.calendar.v1.CalendarService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CalendarService(object):
    """Called to request screener data.
    """

    @staticmethod
    def HolidayCurrencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.calendar.v1.CalendarService/HolidayCurrencies',
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCurrenciesRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCurrenciesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HolidayCenter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.calendar.v1.CalendarService/HolidayCenter',
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCenterRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidayCenterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Holidays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.calendar.v1.CalendarService/Holidays',
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidaysRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.HolidaysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TradingHoursMic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.calendar.v1.CalendarService/TradingHoursMic',
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursMicRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursMicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TradingHours(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.calendar.v1.CalendarService/TradingHours',
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_calendar_dot_v1_dot_calendar__pb2.TradingHoursResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
