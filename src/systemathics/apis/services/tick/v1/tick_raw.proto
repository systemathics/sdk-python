// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Raw tick by tick data is the primary data delivred by a specific data provider (exchange, third party, partner, in-house ...) and has not been processed or normalized yet.
// <br>Raw data can be useful to:
// <br>- Audit provider raw data reception and completion
// <br>- Compare provider's data formats
// <br>- Compare raw provider's format data to normalized (processsed) data
syntax = "proto3";

import "systemathics/apis/type/shared/v1/constraints.proto";
import "systemathics/apis/type/shared/v1/level.proto";
import "systemathics/apis/type/shared/v1/identifier_and_level.proto";
import "systemathics/apis/type/shared/v1/keys.proto";
import "systemathics/apis/type/shared/v1/raw.proto";

package systemathics.apis.services.tick.v1;

// Called to request tick by tick raw data.
service TickRawService 
{
	// Gets tick by tick raw data.
    rpc TickRaw(TickRawRequest) returns (stream TickRawResponse);
}

// The required inputs to request the TickRawService.
message TickRawRequest 
{
    // [Mandatory] The instruments and streams identifiers: a list of tickers, exchanges and streams.
	repeated systemathics.apis.type.shared.v1.IdentifierAndLevel identifiers = 1;

	// [Optional] The time constraints used to define the look-back period.
	// If empty, then all the available data is retrieved.
	systemathics.apis.type.shared.v1.Constraints constraints = 2;
}

// Represents the raw data response.
message TickRawResponse
{
	oneof payload 
	{
		// The raw data
		systemathics.apis.type.shared.v1.Raw raw = 1;
		
		// The mapping data
		systemathics.apis.type.shared.v1.Keys mapping = 2;
	}
}
