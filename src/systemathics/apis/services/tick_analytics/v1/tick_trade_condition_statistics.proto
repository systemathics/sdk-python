// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// The trade condition statistics calculates the ratios of all the trading conditions over a specified trading period.
syntax = "proto3";

import "systemathics/apis/type/shared/v1/constraints.proto";
import "systemathics/apis/type/shared/v1/identifier.proto";

package systemathics.apis.services.tick_analytics.v1;

// Called to request tick by tick trade condition statistics.
service TickTradeConditionStatisticsService 
{
    // Gets tick by tick trade condition statistics
    rpc TickTradeConditionStatistics(TickTradeConditionStatisticsRequest) returns (stream TickTradeConditionStatisticsResponse);
}

// The required inputs to request the TickTradeConditionStatisticsService.
message TickTradeConditionStatisticsRequest 
{
    // [Mandatory] The instrument identifier: a ticker and exchange
	systemathics.apis.type.shared.v1.Identifier identifier = 1;

	// [Optional] The time constraints used to define the look-back period.
	// If empty, then all the available data is retrieved.
	systemathics.apis.type.shared.v1.Constraints constraints = 2;
}

// Contains the trade condition statistics.
message TickTradeConditionStatisticsResponse
{
	// The trading condition value
	string value = 1;
	
	// The trading condition count
	int64 count = 2;

	// The total trades count (for all trade conditions)
	int64 total = 3;

	// The trading condition percentage : count / total
	double percentage = 4;

	// The trades volume
	int64 volume = 5;

	// The total trades volume (for all trade conditions)
	int64 total_volume = 6;

	// The volume trading condition percentage : volume / total volume
	double volume_percentage = 7;
}
