// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// <i>The Volume Weighted Average Price</i> is similar to a moving average, except volume is included to weight the average price over a one trading day period.
// <br>It serves as a reference point for one trading day prices. Comparing current prices with the VWAP values enables to:
// <br>- mesure trading efficiency by comparing individual trades to VWAP
// <br>- highlight liquidity points as vwap reflects prices levels weighted by volume
// <br>- determine the market trend, etc.
syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

import "systemathics/apis/type/shared/v1/constraints.proto";
import "systemathics/apis/type/shared/v1/identifier.proto";

package systemathics.apis.services.tick_analytics.v1;

// Called to request tcik Volume Weighted Average Price. 
service TickVwapService 
{
	// Gets tick by tick historical VWAPs
    rpc TickVwap(TickVwapRequest) returns (stream TickVwapResponse);
}


// The required input to request the TickVwapService.
message TickVwapRequest 
{
    // [Mandatory] The instrument identifier: a ticker and exchange
	systemathics.apis.type.shared.v1.Identifier identifier = 1;

	// [Optional] The time constraints used to define the look-back period
	// If empty, then all the available data is used
	systemathics.apis.type.shared.v1.Constraints constraints = 2;

    // [Optional] The period of the vwap, by default the period is set to one day
	google.protobuf.Duration period = 3;

	// [Optional] The offset time when the vwap is reset, by default the offset is set to 00:00:00
	google.protobuf.Duration offset = 4;

	// [Optional] The corporate action adjustment, by default the value is set to false
	bool adjustment = 5;

	// [Optional] Accept trading / quote conditions, by default the accept is set to null : accept all
	repeated string accept = 6;

	// [Optional] Rejected trading / quote conditions, by default the reject is set to null : do not reject
	repeated string reject = 7;
}

// Contains the vwap data: timestamp, price, volume and ticks count.
message TickVwapResponse
{
	// The time stamp of the vwap
	google.protobuf.Timestamp time_stamp = 1;
	
	// The vwap price
	double vwap = 2;

	// The trade price
	double trade = 3;
	
	// Total traded volume
	int64 volume = 4;
	
	// The ticks count
	int32 ticks = 5;
}
