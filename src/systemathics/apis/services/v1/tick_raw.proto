syntax = "proto3";

import "google/protobuf/timestamp.proto";

import "systemathics/apis/type/v1/constraints.proto";
import "systemathics/apis/type/v1/field.proto";
import "systemathics/apis/type/v1/stream.proto";
import "systemathics/apis/type/v1/identifier.proto";

package systemathics.apis.services.v1;

// The RAW service definition
// Stream on the fly calculated average values (using RAW formula)
service RawService 
{
    rpc Raw(RawRequest) returns (stream RawResponse);
}

// Represents a market data request with:
//  - Space selection: Identifier 
//  - Time selection: Time constraints (date intervals, intra day restriction time intervals, excluded days, excluded dates) 
message RawRequest 
{
    // The identifier
    systemathics.apis.type.v1.Identifier identifier = 1;
	// The stream level (Level 1 or Level 1 and 2)
    systemathics.apis.type.v1.Stream level = 2;
    // The field we calculate the moving average on
    systemathics.apis.type.v1.Field field = 3;
    // The time constraints
    systemathics.apis.type.v1.Constraints constraints = 4;
}

message RawItem
{
	// The time stamp
	google.protobuf.Timestamp time_stamp = 1;

	// The frame type
	uint32 type = 2;

	// The event source
	uint32 source = 3;
    
	// Payload
	bytes payload = 4;
}

// Represents the RAW response (several at once)
message RawResponse
{
	repeated RawItem raw_items = 1;
}

// Represents the RAW response (one by 1, this is not performant due to Microsoft gRPC API stupid handling of this use case)
message RawResponse2
{
	// The time stamp
	google.protobuf.Timestamp time_stamp = 1;

	// The frame type
	uint32 type = 2;

	// The event source
	uint32 source = 3;
    
	// Payload
	bytes payload = 4;
}
